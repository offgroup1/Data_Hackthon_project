{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "name": "[이어드림스쿨]미니_프로젝트_데이터_분석_이수현.ipynb",
      "provenance": []
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "code",
      "source": [
        "import numpy as np\n",
        "import pandas as pd\n",
        "import matplotlib.pyplot as plt\n",
        "import seaborn as sns\n",
        "import matplotlib as mpl\n",
        "%matplotlib inline\n",
        "mpl.rcParams['font.family'] = 'Nanum Brush Script'"
      ],
      "metadata": {
        "id": "5_B-SdhcIJI1"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "cvmXlMjyiaL0",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 346
        },
        "outputId": "04fc434c-43b9-44af-93c0-2978f6aae306"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "        id  customer_id  course_id     type      state  \\\n",
              "0   970657      72297.0   204246.0  PAYMENT  COMPLETED   \n",
              "1  1004099      72297.0   203720.0  PAYMENT  COMPLETED   \n",
              "2  1181420      72297.0   205162.0  PAYMENT  COMPLETED   \n",
              "\n",
              "                                        course_title category_title  format  \\\n",
              "0                               시크릿코드 : 프론트엔드 실무 완성편          프로그래밍  스쿨 온라인   \n",
              "1                        초격차 패키지 : 한 번에 끝내는 프론트엔드 개발          프로그래밍     올인원   \n",
              "2  올인원 패키지 : 아카데미 : 편집하는여자의 영상편집 마스터클래스 - 제 1강 프리...          영상/3D     올인원   \n",
              "\n",
              "          completed_at  transaction_amount           coupon_title  \\\n",
              "0  2021-03-28 15:21:43              171.81  [10% 할인] 시크릿코드 실무 완성편   \n",
              "1  2021-04-11 15:18:35              113.00                    NaN   \n",
              "2  2021-06-30 20:24:24               98.00                    NaN   \n",
              "\n",
              "   coupon_discount_amount  sale_price       pg method subcategory_title  \\\n",
              "0                   19.09       190.9  default   CARD               NaN   \n",
              "1                     NaN       113.0   INICIS   CARD          프론트엔드 개발   \n",
              "2                     NaN        98.0    PAYCO   CARD             영상 편집   \n",
              "\n",
              "    marketing_start_at  \n",
              "0  2021-03-04 00:00:00  \n",
              "1  2021-02-02 00:00:00  \n",
              "2  2021-06-03 00:00:00  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-418245a9-413b-4232-a594-1663c36b5140\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>customer_id</th>\n",
              "      <th>course_id</th>\n",
              "      <th>type</th>\n",
              "      <th>state</th>\n",
              "      <th>course_title</th>\n",
              "      <th>category_title</th>\n",
              "      <th>format</th>\n",
              "      <th>completed_at</th>\n",
              "      <th>transaction_amount</th>\n",
              "      <th>coupon_title</th>\n",
              "      <th>coupon_discount_amount</th>\n",
              "      <th>sale_price</th>\n",
              "      <th>pg</th>\n",
              "      <th>method</th>\n",
              "      <th>subcategory_title</th>\n",
              "      <th>marketing_start_at</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>970657</td>\n",
              "      <td>72297.0</td>\n",
              "      <td>204246.0</td>\n",
              "      <td>PAYMENT</td>\n",
              "      <td>COMPLETED</td>\n",
              "      <td>시크릿코드 : 프론트엔드 실무 완성편</td>\n",
              "      <td>프로그래밍</td>\n",
              "      <td>스쿨 온라인</td>\n",
              "      <td>2021-03-28 15:21:43</td>\n",
              "      <td>171.81</td>\n",
              "      <td>[10% 할인] 시크릿코드 실무 완성편</td>\n",
              "      <td>19.09</td>\n",
              "      <td>190.9</td>\n",
              "      <td>default</td>\n",
              "      <td>CARD</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2021-03-04 00:00:00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>1004099</td>\n",
              "      <td>72297.0</td>\n",
              "      <td>203720.0</td>\n",
              "      <td>PAYMENT</td>\n",
              "      <td>COMPLETED</td>\n",
              "      <td>초격차 패키지 : 한 번에 끝내는 프론트엔드 개발</td>\n",
              "      <td>프로그래밍</td>\n",
              "      <td>올인원</td>\n",
              "      <td>2021-04-11 15:18:35</td>\n",
              "      <td>113.00</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>113.0</td>\n",
              "      <td>INICIS</td>\n",
              "      <td>CARD</td>\n",
              "      <td>프론트엔드 개발</td>\n",
              "      <td>2021-02-02 00:00:00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>1181420</td>\n",
              "      <td>72297.0</td>\n",
              "      <td>205162.0</td>\n",
              "      <td>PAYMENT</td>\n",
              "      <td>COMPLETED</td>\n",
              "      <td>올인원 패키지 : 아카데미 : 편집하는여자의 영상편집 마스터클래스 - 제 1강 프리...</td>\n",
              "      <td>영상/3D</td>\n",
              "      <td>올인원</td>\n",
              "      <td>2021-06-30 20:24:24</td>\n",
              "      <td>98.00</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>98.0</td>\n",
              "      <td>PAYCO</td>\n",
              "      <td>CARD</td>\n",
              "      <td>영상 편집</td>\n",
              "      <td>2021-06-03 00:00:00</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-418245a9-413b-4232-a594-1663c36b5140')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-418245a9-413b-4232-a594-1663c36b5140 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-418245a9-413b-4232-a594-1663c36b5140');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 2
        }
      ],
      "source": [
        "data = pd.read_csv('/content/final (1).csv')\n",
        "data.head(3)"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "data.info() #총 50566개 데이터"
      ],
      "metadata": {
        "id": "AiZUNbLHTBwY",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "43b50702-932d-405a-f620-47f0aabde8b7"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "<class 'pandas.core.frame.DataFrame'>\n",
            "RangeIndex: 50566 entries, 0 to 50565\n",
            "Data columns (total 17 columns):\n",
            " #   Column                  Non-Null Count  Dtype  \n",
            "---  ------                  --------------  -----  \n",
            " 0   id                      50566 non-null  int64  \n",
            " 1   customer_id             50566 non-null  float64\n",
            " 2   course_id               48588 non-null  float64\n",
            " 3   type                    50566 non-null  object \n",
            " 4   state                   50566 non-null  object \n",
            " 5   course_title            50566 non-null  object \n",
            " 6   category_title          50566 non-null  object \n",
            " 7   format                  50566 non-null  object \n",
            " 8   completed_at            50566 non-null  object \n",
            " 9   transaction_amount      50566 non-null  float64\n",
            " 10  coupon_title            23150 non-null  object \n",
            " 11  coupon_discount_amount  23150 non-null  float64\n",
            " 12  sale_price              50566 non-null  float64\n",
            " 13  pg                      50566 non-null  object \n",
            " 14  method                  50566 non-null  object \n",
            " 15  subcategory_title       42886 non-null  object \n",
            " 16  marketing_start_at      50566 non-null  object \n",
            "dtypes: float64(5), int64(1), object(11)\n",
            "memory usage: 6.6+ MB\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "1. **고객군 분석** : **`패스트캠퍼스에서 강의를 구매하는 사람들은 어떤 그룹으로 분류될까요?`**  \n",
        "강의 수 & 총 액 으로 등급을 나눠 보자."
      ],
      "metadata": {
        "id": "Y6rnoHJk5BtN"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "\n",
        "\n",
        "> 고객이 구매한 강의 수에 따른 점수 부여\n",
        "\n"
      ],
      "metadata": {
        "id": "oFKavkABffZB"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "#75%의 고객이 1개 선택\n",
        "count2 = pd.DataFrame(data['customer_id'].value_counts())\n",
        "count2.describe()"
      ],
      "metadata": {
        "id": "E5d8YOtiJP3U",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 300
        },
        "outputId": "a5791a75-4750-44ee-ea24-4f47cbda8f4b"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "        customer_id\n",
              "count  37879.000000\n",
              "mean       1.334935\n",
              "std        1.011571\n",
              "min        1.000000\n",
              "25%        1.000000\n",
              "50%        1.000000\n",
              "75%        1.000000\n",
              "max       53.000000"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-981df64a-040a-4db4-a04b-aff3a26decbe\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>customer_id</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>count</th>\n",
              "      <td>37879.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>mean</th>\n",
              "      <td>1.334935</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>std</th>\n",
              "      <td>1.011571</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>min</th>\n",
              "      <td>1.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25%</th>\n",
              "      <td>1.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>50%</th>\n",
              "      <td>1.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>75%</th>\n",
              "      <td>1.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>max</th>\n",
              "      <td>53.000000</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-981df64a-040a-4db4-a04b-aff3a26decbe')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-981df64a-040a-4db4-a04b-aff3a26decbe button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-981df64a-040a-4db4-a04b-aff3a26decbe');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 4
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#하지만, 1개 선택 고객부터 6개 선택 고객까지 연속적으로 분포해 있음 \n",
        "count2.rename(columns={'customer_id':'c_purchase_count'}, inplace=True)\n",
        "count2"
      ],
      "metadata": {
        "id": "mbgdgomrvFS1",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 424
        },
        "outputId": "a4ef91df-d6e0-47e9-b9dd-63341e89ffc1"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "          c_purchase_count\n",
              "98685.0                 53\n",
              "50769.0                 39\n",
              "40783.0                 34\n",
              "65665.0                 27\n",
              "20784.0                 26\n",
              "...                    ...\n",
              "543318.0                 1\n",
              "542013.0                 1\n",
              "543306.0                 1\n",
              "543277.0                 1\n",
              "610626.0                 1\n",
              "\n",
              "[37879 rows x 1 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-6124f6e4-1135-4986-b854-b50fd6a28003\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>c_purchase_count</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>98685.0</th>\n",
              "      <td>53</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>50769.0</th>\n",
              "      <td>39</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>40783.0</th>\n",
              "      <td>34</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>65665.0</th>\n",
              "      <td>27</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>20784.0</th>\n",
              "      <td>26</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>543318.0</th>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>542013.0</th>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>543306.0</th>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>543277.0</th>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>610626.0</th>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>37879 rows × 1 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-6124f6e4-1135-4986-b854-b50fd6a28003')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-6124f6e4-1135-4986-b854-b50fd6a28003 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-6124f6e4-1135-4986-b854-b50fd6a28003');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 5
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "count2.index.name = 'customer_id'\n",
        "count2"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 455
        },
        "id": "CLxlJkaZZZu0",
        "outputId": "8b5ba91d-ef47-4394-86e3-819cc837a396"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "             c_purchase_count\n",
              "customer_id                  \n",
              "98685.0                    53\n",
              "50769.0                    39\n",
              "40783.0                    34\n",
              "65665.0                    27\n",
              "20784.0                    26\n",
              "...                       ...\n",
              "543318.0                    1\n",
              "542013.0                    1\n",
              "543306.0                    1\n",
              "543277.0                    1\n",
              "610626.0                    1\n",
              "\n",
              "[37879 rows x 1 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-45dee063-8340-4abc-9b84-acd62db29221\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>c_purchase_count</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>customer_id</th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>98685.0</th>\n",
              "      <td>53</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>50769.0</th>\n",
              "      <td>39</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>40783.0</th>\n",
              "      <td>34</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>65665.0</th>\n",
              "      <td>27</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>20784.0</th>\n",
              "      <td>26</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>543318.0</th>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>542013.0</th>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>543306.0</th>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>543277.0</th>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>610626.0</th>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>37879 rows × 1 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-45dee063-8340-4abc-9b84-acd62db29221')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-45dee063-8340-4abc-9b84-acd62db29221 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-45dee063-8340-4abc-9b84-acd62db29221');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 6
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#정규분포 그래프에 따라 이탈:1개, 이탈위험:2-3개, 일반:4-10개, vip:11-78개 로 나누기로 결정\n",
        "sns.distplot(count2) "
      ],
      "metadata": {
        "id": "1zgQ_zoefIkc",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 339
        },
        "outputId": "8ba4165d-6c52-453a-90a1-b66c2e92c847"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.7/dist-packages/seaborn/distributions.py:2619: FutureWarning: `distplot` is a deprecated function and will be removed in a future version. Please adapt your code to use either `displot` (a figure-level function with similar flexibility) or `histplot` (an axes-level function for histograms).\n",
            "  warnings.warn(msg, FutureWarning)\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<matplotlib.axes._subplots.AxesSubplot at 0x7fdfd01dde90>"
            ]
          },
          "metadata": {},
          "execution_count": 7
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#점수 부여하기\n",
        "def score(row): \n",
        "  if row > 10 :\n",
        "    return 4\n",
        "  elif  row > 3 and row  <= 10 :\n",
        "    return 3\n",
        "  elif row == 2 or row == 3:\n",
        "    return 2\n",
        "  elif row ==1:\n",
        "    return 1\n",
        "\n",
        "count2['c_purchase_level'] = count2.c_purchase_count.apply(score)\n"
      ],
      "metadata": {
        "id": "xA0i8HHiCdo2"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "count2"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 455
        },
        "id": "_67VLe_TZplr",
        "outputId": "4e18fca9-394f-4bce-a420-7f5871889643"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "             c_purchase_count  c_purchase_level\n",
              "customer_id                                    \n",
              "98685.0                    53                 4\n",
              "50769.0                    39                 4\n",
              "40783.0                    34                 4\n",
              "65665.0                    27                 4\n",
              "20784.0                    26                 4\n",
              "...                       ...               ...\n",
              "543318.0                    1                 1\n",
              "542013.0                    1                 1\n",
              "543306.0                    1                 1\n",
              "543277.0                    1                 1\n",
              "610626.0                    1                 1\n",
              "\n",
              "[37879 rows x 2 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-98100e60-470a-44a6-910e-0503b4263565\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>c_purchase_count</th>\n",
              "      <th>c_purchase_level</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>customer_id</th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>98685.0</th>\n",
              "      <td>53</td>\n",
              "      <td>4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>50769.0</th>\n",
              "      <td>39</td>\n",
              "      <td>4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>40783.0</th>\n",
              "      <td>34</td>\n",
              "      <td>4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>65665.0</th>\n",
              "      <td>27</td>\n",
              "      <td>4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>20784.0</th>\n",
              "      <td>26</td>\n",
              "      <td>4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>543318.0</th>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>542013.0</th>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>543306.0</th>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>543277.0</th>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>610626.0</th>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>37879 rows × 2 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-98100e60-470a-44a6-910e-0503b4263565')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-98100e60-470a-44a6-910e-0503b4263565 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-98100e60-470a-44a6-910e-0503b4263565');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 9
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#원본 dataframe에 붙여주기\n",
        "data = pd.merge(data,count2,on='customer_id')\n",
        "data.head(3)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 346
        },
        "id": "qnt42gDjaJPp",
        "outputId": "358fdd5a-d7ea-433b-f72e-b9635eb2734e"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "        id  customer_id  course_id     type      state  \\\n",
              "0   970657      72297.0   204246.0  PAYMENT  COMPLETED   \n",
              "1  1004099      72297.0   203720.0  PAYMENT  COMPLETED   \n",
              "2  1181420      72297.0   205162.0  PAYMENT  COMPLETED   \n",
              "\n",
              "                                        course_title category_title  format  \\\n",
              "0                               시크릿코드 : 프론트엔드 실무 완성편          프로그래밍  스쿨 온라인   \n",
              "1                        초격차 패키지 : 한 번에 끝내는 프론트엔드 개발          프로그래밍     올인원   \n",
              "2  올인원 패키지 : 아카데미 : 편집하는여자의 영상편집 마스터클래스 - 제 1강 프리...          영상/3D     올인원   \n",
              "\n",
              "          completed_at  transaction_amount           coupon_title  \\\n",
              "0  2021-03-28 15:21:43              171.81  [10% 할인] 시크릿코드 실무 완성편   \n",
              "1  2021-04-11 15:18:35              113.00                    NaN   \n",
              "2  2021-06-30 20:24:24               98.00                    NaN   \n",
              "\n",
              "   coupon_discount_amount  sale_price       pg method subcategory_title  \\\n",
              "0                   19.09       190.9  default   CARD               NaN   \n",
              "1                     NaN       113.0   INICIS   CARD          프론트엔드 개발   \n",
              "2                     NaN        98.0    PAYCO   CARD             영상 편집   \n",
              "\n",
              "    marketing_start_at  c_purchase_count  c_purchase_level  \n",
              "0  2021-03-04 00:00:00                 5                 3  \n",
              "1  2021-02-02 00:00:00                 5                 3  \n",
              "2  2021-06-03 00:00:00                 5                 3  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-62f51d59-13a1-489c-9a72-164aff8e1d2f\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>customer_id</th>\n",
              "      <th>course_id</th>\n",
              "      <th>type</th>\n",
              "      <th>state</th>\n",
              "      <th>course_title</th>\n",
              "      <th>category_title</th>\n",
              "      <th>format</th>\n",
              "      <th>completed_at</th>\n",
              "      <th>transaction_amount</th>\n",
              "      <th>coupon_title</th>\n",
              "      <th>coupon_discount_amount</th>\n",
              "      <th>sale_price</th>\n",
              "      <th>pg</th>\n",
              "      <th>method</th>\n",
              "      <th>subcategory_title</th>\n",
              "      <th>marketing_start_at</th>\n",
              "      <th>c_purchase_count</th>\n",
              "      <th>c_purchase_level</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>970657</td>\n",
              "      <td>72297.0</td>\n",
              "      <td>204246.0</td>\n",
              "      <td>PAYMENT</td>\n",
              "      <td>COMPLETED</td>\n",
              "      <td>시크릿코드 : 프론트엔드 실무 완성편</td>\n",
              "      <td>프로그래밍</td>\n",
              "      <td>스쿨 온라인</td>\n",
              "      <td>2021-03-28 15:21:43</td>\n",
              "      <td>171.81</td>\n",
              "      <td>[10% 할인] 시크릿코드 실무 완성편</td>\n",
              "      <td>19.09</td>\n",
              "      <td>190.9</td>\n",
              "      <td>default</td>\n",
              "      <td>CARD</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2021-03-04 00:00:00</td>\n",
              "      <td>5</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>1004099</td>\n",
              "      <td>72297.0</td>\n",
              "      <td>203720.0</td>\n",
              "      <td>PAYMENT</td>\n",
              "      <td>COMPLETED</td>\n",
              "      <td>초격차 패키지 : 한 번에 끝내는 프론트엔드 개발</td>\n",
              "      <td>프로그래밍</td>\n",
              "      <td>올인원</td>\n",
              "      <td>2021-04-11 15:18:35</td>\n",
              "      <td>113.00</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>113.0</td>\n",
              "      <td>INICIS</td>\n",
              "      <td>CARD</td>\n",
              "      <td>프론트엔드 개발</td>\n",
              "      <td>2021-02-02 00:00:00</td>\n",
              "      <td>5</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>1181420</td>\n",
              "      <td>72297.0</td>\n",
              "      <td>205162.0</td>\n",
              "      <td>PAYMENT</td>\n",
              "      <td>COMPLETED</td>\n",
              "      <td>올인원 패키지 : 아카데미 : 편집하는여자의 영상편집 마스터클래스 - 제 1강 프리...</td>\n",
              "      <td>영상/3D</td>\n",
              "      <td>올인원</td>\n",
              "      <td>2021-06-30 20:24:24</td>\n",
              "      <td>98.00</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>98.0</td>\n",
              "      <td>PAYCO</td>\n",
              "      <td>CARD</td>\n",
              "      <td>영상 편집</td>\n",
              "      <td>2021-06-03 00:00:00</td>\n",
              "      <td>5</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-62f51d59-13a1-489c-9a72-164aff8e1d2f')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-62f51d59-13a1-489c-9a72-164aff8e1d2f button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-62f51d59-13a1-489c-9a72-164aff8e1d2f');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 10
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "###창헌님 파일 합처주기\n",
        "\n",
        "고객군 분류의 두번째 기준인 고객별 누적 금액 기준으로 나눈 파일 합치기"
      ],
      "metadata": {
        "id": "UxzT1nQmsdzM"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "score2 = pd.read_csv('/content/score2.csv')"
      ],
      "metadata": {
        "id": "i3OaYf8NeQt4"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "score2 = pd.DataFrame(score2.loc[:,['customer_id','trans_level']])"
      ],
      "metadata": {
        "id": "aWUnqxgYt-6F"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "data = pd.merge(data,score2,on='customer_id')"
      ],
      "metadata": {
        "id": "Ove803G0uZ-c"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "data.head(3)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 312
        },
        "id": "x6j4r1Qkul5U",
        "outputId": "3078ff25-25a5-46e6-d2d7-73dfe6fd9399"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "       id  customer_id  course_id     type      state          course_title  \\\n",
              "0  970657      72297.0   204246.0  PAYMENT  COMPLETED  시크릿코드 : 프론트엔드 실무 완성편   \n",
              "1  970657      72297.0   204246.0  PAYMENT  COMPLETED  시크릿코드 : 프론트엔드 실무 완성편   \n",
              "2  970657      72297.0   204246.0  PAYMENT  COMPLETED  시크릿코드 : 프론트엔드 실무 완성편   \n",
              "\n",
              "  category_title  format         completed_at  transaction_amount  \\\n",
              "0          프로그래밍  스쿨 온라인  2021-03-28 15:21:43              171.81   \n",
              "1          프로그래밍  스쿨 온라인  2021-03-28 15:21:43              171.81   \n",
              "2          프로그래밍  스쿨 온라인  2021-03-28 15:21:43              171.81   \n",
              "\n",
              "            coupon_title  coupon_discount_amount  sale_price       pg method  \\\n",
              "0  [10% 할인] 시크릿코드 실무 완성편                   19.09       190.9  default   CARD   \n",
              "1  [10% 할인] 시크릿코드 실무 완성편                   19.09       190.9  default   CARD   \n",
              "2  [10% 할인] 시크릿코드 실무 완성편                   19.09       190.9  default   CARD   \n",
              "\n",
              "  subcategory_title   marketing_start_at  c_purchase_count  c_purchase_level  \\\n",
              "0               NaN  2021-03-04 00:00:00                 5                 3   \n",
              "1               NaN  2021-03-04 00:00:00                 5                 3   \n",
              "2               NaN  2021-03-04 00:00:00                 5                 3   \n",
              "\n",
              "   trans_level  \n",
              "0            1  \n",
              "1            1  \n",
              "2            1  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-0b7a9060-4bca-44a5-a1fb-9d5f9196ca30\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>customer_id</th>\n",
              "      <th>course_id</th>\n",
              "      <th>type</th>\n",
              "      <th>state</th>\n",
              "      <th>course_title</th>\n",
              "      <th>category_title</th>\n",
              "      <th>format</th>\n",
              "      <th>completed_at</th>\n",
              "      <th>transaction_amount</th>\n",
              "      <th>coupon_title</th>\n",
              "      <th>coupon_discount_amount</th>\n",
              "      <th>sale_price</th>\n",
              "      <th>pg</th>\n",
              "      <th>method</th>\n",
              "      <th>subcategory_title</th>\n",
              "      <th>marketing_start_at</th>\n",
              "      <th>c_purchase_count</th>\n",
              "      <th>c_purchase_level</th>\n",
              "      <th>trans_level</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>970657</td>\n",
              "      <td>72297.0</td>\n",
              "      <td>204246.0</td>\n",
              "      <td>PAYMENT</td>\n",
              "      <td>COMPLETED</td>\n",
              "      <td>시크릿코드 : 프론트엔드 실무 완성편</td>\n",
              "      <td>프로그래밍</td>\n",
              "      <td>스쿨 온라인</td>\n",
              "      <td>2021-03-28 15:21:43</td>\n",
              "      <td>171.81</td>\n",
              "      <td>[10% 할인] 시크릿코드 실무 완성편</td>\n",
              "      <td>19.09</td>\n",
              "      <td>190.9</td>\n",
              "      <td>default</td>\n",
              "      <td>CARD</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2021-03-04 00:00:00</td>\n",
              "      <td>5</td>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>970657</td>\n",
              "      <td>72297.0</td>\n",
              "      <td>204246.0</td>\n",
              "      <td>PAYMENT</td>\n",
              "      <td>COMPLETED</td>\n",
              "      <td>시크릿코드 : 프론트엔드 실무 완성편</td>\n",
              "      <td>프로그래밍</td>\n",
              "      <td>스쿨 온라인</td>\n",
              "      <td>2021-03-28 15:21:43</td>\n",
              "      <td>171.81</td>\n",
              "      <td>[10% 할인] 시크릿코드 실무 완성편</td>\n",
              "      <td>19.09</td>\n",
              "      <td>190.9</td>\n",
              "      <td>default</td>\n",
              "      <td>CARD</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2021-03-04 00:00:00</td>\n",
              "      <td>5</td>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>970657</td>\n",
              "      <td>72297.0</td>\n",
              "      <td>204246.0</td>\n",
              "      <td>PAYMENT</td>\n",
              "      <td>COMPLETED</td>\n",
              "      <td>시크릿코드 : 프론트엔드 실무 완성편</td>\n",
              "      <td>프로그래밍</td>\n",
              "      <td>스쿨 온라인</td>\n",
              "      <td>2021-03-28 15:21:43</td>\n",
              "      <td>171.81</td>\n",
              "      <td>[10% 할인] 시크릿코드 실무 완성편</td>\n",
              "      <td>19.09</td>\n",
              "      <td>190.9</td>\n",
              "      <td>default</td>\n",
              "      <td>CARD</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2021-03-04 00:00:00</td>\n",
              "      <td>5</td>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-0b7a9060-4bca-44a5-a1fb-9d5f9196ca30')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-0b7a9060-4bca-44a5-a1fb-9d5f9196ca30 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-0b7a9060-4bca-44a5-a1fb-9d5f9196ca30');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 14
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "####점수 합산\n",
        "\n",
        "고객 별 강의수 점수와 금액 점수 합산"
      ],
      "metadata": {
        "id": "4cy8I-rFvB_-"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "data['total_score'] = data['trans_level']+data['c_purchase_level']"
      ],
      "metadata": {
        "id": "Fp9B_dzOu0WE"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "####고객 군 분류"
      ],
      "metadata": {
        "id": "uLX8Dip5vS8G"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "data['group'] = pd.cut(data['total_score'],4,labels=['이탈','이탈위험','일반','VIP'])"
      ],
      "metadata": {
        "id": "dKRnDGonu-7v"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "####EDA\n",
        "각 고객군별 구매한 강의 수"
      ],
      "metadata": {
        "id": "a86d0AyttK71"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "unique_data = data\n",
        "\n",
        "fig, ax = plt.subplots(figsize = (20,10))\n",
        "plt.grid()\n",
        "plt.rcParams['font.family'] = 'AppleGothic'\n",
        "sns.stripplot(x = 'group', y = 'c_purchase_count', data = data)\n",
        "sns.boxplot(x='group' , y = 'c_purchase_count' , data= data, boxprops = dict(alpha=0.5),order = ['이탈' , '이탈위험', '일반', 'VIP'])\n",
        "ax.set_ylim([0, 55])"
      ],
      "metadata": {
        "id": "UIAPxLOTY4io",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 966
        },
        "outputId": "989f31b4-6287-4567-e2bc-13a29561b879"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(0.0, 55.0)"
            ]
          },
          "metadata": {},
          "execution_count": 34
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.7/dist-packages/matplotlib/backends/backend_agg.py:214: RuntimeWarning: Glyph 51060 missing from current font.\n",
            "  font.set_text(s, 0.0, flags=flags)\n",
            "/usr/local/lib/python3.7/dist-packages/matplotlib/backends/backend_agg.py:214: RuntimeWarning: Glyph 53448 missing from current font.\n",
            "  font.set_text(s, 0.0, flags=flags)\n",
            "/usr/local/lib/python3.7/dist-packages/matplotlib/backends/backend_agg.py:214: RuntimeWarning: Glyph 50948 missing from current font.\n",
            "  font.set_text(s, 0.0, flags=flags)\n",
            "/usr/local/lib/python3.7/dist-packages/matplotlib/backends/backend_agg.py:214: RuntimeWarning: Glyph 54744 missing from current font.\n",
            "  font.set_text(s, 0.0, flags=flags)\n",
            "/usr/local/lib/python3.7/dist-packages/matplotlib/backends/backend_agg.py:214: RuntimeWarning: Glyph 51068 missing from current font.\n",
            "  font.set_text(s, 0.0, flags=flags)\n",
            "/usr/local/lib/python3.7/dist-packages/matplotlib/backends/backend_agg.py:214: RuntimeWarning: Glyph 48152 missing from current font.\n",
            "  font.set_text(s, 0.0, flags=flags)\n",
            "/usr/local/lib/python3.7/dist-packages/matplotlib/backends/backend_agg.py:183: RuntimeWarning: Glyph 51060 missing from current font.\n",
            "  font.set_text(s, 0, flags=flags)\n",
            "/usr/local/lib/python3.7/dist-packages/matplotlib/backends/backend_agg.py:183: RuntimeWarning: Glyph 53448 missing from current font.\n",
            "  font.set_text(s, 0, flags=flags)\n",
            "/usr/local/lib/python3.7/dist-packages/matplotlib/backends/backend_agg.py:183: RuntimeWarning: Glyph 50948 missing from current font.\n",
            "  font.set_text(s, 0, flags=flags)\n",
            "/usr/local/lib/python3.7/dist-packages/matplotlib/backends/backend_agg.py:183: RuntimeWarning: Glyph 54744 missing from current font.\n",
            "  font.set_text(s, 0, flags=flags)\n",
            "/usr/local/lib/python3.7/dist-packages/matplotlib/backends/backend_agg.py:183: RuntimeWarning: Glyph 51068 missing from current font.\n",
            "  font.set_text(s, 0, flags=flags)\n",
            "/usr/local/lib/python3.7/dist-packages/matplotlib/backends/backend_agg.py:183: RuntimeWarning: Glyph 48152 missing from current font.\n",
            "  font.set_text(s, 0, flags=flags)\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1440x720 with 1 Axes>"
            ],
            "image/png": "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\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    }
  ]
}